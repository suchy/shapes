[{"/Users/suchy/Projects/shapes/src/index.ts":"1","/Users/suchy/Projects/shapes/src/ui/index.tsx":"2","/Users/suchy/Projects/shapes/src/ui/components/App.tsx":"3","/Users/suchy/Projects/shapes/src/ui/components/StylesReset.tsx":"4","/Users/suchy/Projects/shapes/src/ui/components/Filters.tsx":"5","/Users/suchy/Projects/shapes/src/domain/shapes/shape.ts":"6","/Users/suchy/Projects/shapes/src/ui/state/state.ts":"7","/Users/suchy/Projects/shapes/src/domain/shapes/use-cases/get-shapes.ts":"8","/Users/suchy/Projects/shapes/src/domain/shapes/shapes-repository.ts":"9","/Users/suchy/Projects/shapes/src/infrastructure/api-client.ts":"10","/Users/suchy/Projects/shapes/src/ui/state/selectors.ts":"11","/Users/suchy/Projects/shapes/src/ui/hooks/use-shallow-selector.ts":"12","/Users/suchy/Projects/shapes/src/ui/components/ShapesList.tsx":"13","/Users/suchy/Projects/shapes/src/ui/components/Shapes.tsx":"14","/Users/suchy/Projects/shapes/src/ui/components/Header.tsx":"15","/Users/suchy/Projects/shapes/src/ui/components/ShapesListTitle.tsx":"16","/Users/suchy/Projects/shapes/src/ui/components/Container.tsx":"17","/Users/suchy/Projects/shapes/src/ui/components/Shape.tsx":"18"},{"size":21,"mtime":1609779909812,"results":"19","hashOfConfig":"20"},{"size":154,"mtime":1609779909803,"results":"21","hashOfConfig":"20"},{"size":446,"mtime":1609872375786,"results":"22","hashOfConfig":"20"},{"size":2060,"mtime":1609872342774,"results":"23","hashOfConfig":"20"},{"size":3135,"mtime":1609889924837,"results":"24","hashOfConfig":"20"},{"size":946,"mtime":1609888682400,"results":"25","hashOfConfig":"20"},{"size":2852,"mtime":1609832701266,"results":"26","hashOfConfig":"20"},{"size":119,"mtime":1609785377271,"results":"27","hashOfConfig":"20"},{"size":587,"mtime":1609785422383,"results":"28","hashOfConfig":"20"},{"size":85,"mtime":1609779909813,"results":"29","hashOfConfig":"20"},{"size":589,"mtime":1609833100904,"results":"30","hashOfConfig":"20"},{"size":218,"mtime":1609794631357,"results":"31","hashOfConfig":"20"},{"size":1433,"mtime":1609891522805,"results":"32","hashOfConfig":"20"},{"size":1015,"mtime":1609870291571,"results":"33","hashOfConfig":"20"},{"size":529,"mtime":1609872165798,"results":"34","hashOfConfig":"20"},{"size":2137,"mtime":1609888687030,"results":"35","hashOfConfig":"20"},{"size":191,"mtime":1609852831255,"results":"36","hashOfConfig":"20"},{"size":1575,"mtime":1609870278947,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"5hqryj",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/suchy/Projects/shapes/src/index.ts",[],["77","78"],"/Users/suchy/Projects/shapes/src/ui/index.tsx",[],"/Users/suchy/Projects/shapes/src/ui/components/App.tsx",[],"/Users/suchy/Projects/shapes/src/ui/components/StylesReset.tsx",[],"/Users/suchy/Projects/shapes/src/ui/components/Filters.tsx",[],"/Users/suchy/Projects/shapes/src/domain/shapes/shape.ts",[],"/Users/suchy/Projects/shapes/src/ui/state/state.ts",["79"],"import { createAction, createReducer, configureStore } from '@reduxjs/toolkit';\n\nimport { Shape, ShapeColors, ShapeShapes } from '../../domain/shapes/shape';\nimport { getShapes as fetchShapes } from '../../domain/shapes/use-cases/get-shapes';\n\nexport const getShapes = () => async (dispatch: any) => {\n  try {\n    dispatch(getShapesInit());\n    const shapes = await fetchShapes();\n    dispatch(getShapesSuccess(shapes));\n  } catch {\n    dispatch(getShapesFail());\n  }\n};\n\nexport const getShapesInit = createAction('GET_SHAPES_INIT');\n\nexport const getShapesSuccess = createAction<Shape[]>('GET_SHAPES_SUCCESS');\n\nexport const getShapesFail = createAction('GET_SHAPES_FAIL');\n\nexport const toggleColorFilter = createAction<ShapeColors>(\n  'TOGGLE_COLOR_FILTER'\n);\n\nexport const toggleShapeFilter = createAction<ShapeShapes>(\n  'TOGGLE_SHAPE_FILTER'\n);\n\nexport interface State {\n  isFetching: boolean;\n  isFetchingError: boolean;\n  isFetchingDone: boolean;\n  shapes: Shape[];\n  colorFilters: string[];\n  shapeFilters: string[];\n}\n\nconst initialState: State = {\n  isFetching: false,\n  isFetchingError: false,\n  isFetchingDone: false,\n  colorFilters: Object.keys(ShapeColors),\n  shapeFilters: Object.keys(ShapeShapes),\n  shapes: []\n};\n\nconst reducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(getShapesInit, (state) => ({\n      ...state,\n      isFetching: true,\n      isFetchingError: false,\n      isFetchingDone: false\n    }))\n\n    .addCase(getShapesFail, (state) => ({\n      ...state,\n      isFetching: false,\n      isFetchingError: true,\n      isFetchingDone: true\n    }))\n\n    .addCase(getShapesSuccess, (state, { payload: shapes }) => ({\n      ...state,\n      isFetching: false,\n      isFetchingError: false,\n      isFetchingDone: true,\n      shapes\n    }))\n\n    .addCase(toggleColorFilter, (state, { payload: filter }) => {\n      let colorFilters = [...state.colorFilters];\n\n      const isFilterEnabled = colorFilters.includes(filter);\n\n      if (isFilterEnabled) {\n        colorFilters = colorFilters.filter((f) => f !== filter);\n      } else {\n        colorFilters.push(filter);\n      }\n\n      if (!colorFilters.length) {\n        colorFilters = Object.keys(ShapeColors);\n      }\n\n      const newState = { ...state, colorFilters };\n      return newState;\n    })\n\n    .addCase(toggleShapeFilter, (state, { payload: filter }) => {\n      let shapeFilters = [...state.shapeFilters];\n\n      const isFilterEnabled = shapeFilters.includes(filter);\n\n      if (isFilterEnabled) {\n        shapeFilters = shapeFilters.filter((f) => f !== filter);\n      } else {\n        shapeFilters.push(filter);\n      }\n\n      if (!shapeFilters.length) {\n        shapeFilters = Object.keys(ShapeShapes);\n      }\n\n      const newState = { ...state, shapeFilters };\n      return newState;\n    });\n});\n\nexport const store = configureStore({ reducer });\n","/Users/suchy/Projects/shapes/src/domain/shapes/use-cases/get-shapes.ts",[],"/Users/suchy/Projects/shapes/src/domain/shapes/shapes-repository.ts",["80","81"],"import { apiClient } from '../../infrastructure/api-client';\nimport { shapeFactory, Shape } from './shape';\n\nexport const shapesRepository = {\n  async getShapes(): Promise<Shape[]> {\n    try {\n      const response = await apiClient.get('/shapes.json');\n\n      const rawShapes = response.data;\n\n      const shapes = rawShapes.map((rawShape: any) =>\n        shapeFactory({\n          id: rawShape.id,\n          color: rawShape.color,\n          shape: rawShape.shape\n        })\n      );\n\n      return shapes;\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n};\n","/Users/suchy/Projects/shapes/src/infrastructure/api-client.ts",[],"/Users/suchy/Projects/shapes/src/ui/state/selectors.ts",[],"/Users/suchy/Projects/shapes/src/ui/hooks/use-shallow-selector.ts",[],"/Users/suchy/Projects/shapes/src/ui/components/ShapesList.tsx",[],"/Users/suchy/Projects/shapes/src/ui/components/Shapes.tsx",[],"/Users/suchy/Projects/shapes/src/ui/components/Header.tsx",[],"/Users/suchy/Projects/shapes/src/ui/components/ShapesListTitle.tsx",[],"/Users/suchy/Projects/shapes/src/ui/components/Container.tsx",["82"],"/Users/suchy/Projects/shapes/src/ui/components/Shape.tsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":6,"column":49,"nodeType":"89","messageId":"90","endLine":6,"endColumn":52,"suggestions":"91"},{"ruleId":"87","severity":1,"message":"88","line":11,"column":47,"nodeType":"89","messageId":"90","endLine":11,"endColumn":50,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":21,"column":7,"nodeType":"95","messageId":"96","endLine":21,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":17},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["103","104"],["105","106"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-unused-vars","'EDEADLK' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"messageId":"107","fix":"108","desc":"109"},{"messageId":"110","fix":"111","desc":"112"},{"messageId":"107","fix":"113","desc":"109"},{"messageId":"110","fix":"114","desc":"112"},"suggestUnknown",{"range":"115","text":"116"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"115","text":"117"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"118","text":"116"},{"range":"118","text":"117"},[292,295],"unknown","never",[340,343]]